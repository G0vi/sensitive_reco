import re
# from nlp_client.ner_client import name_cn, name_en, place_cn, place_en
from nlp.ner_functions import get_name, get_place, get_edu, get_title


# verify function
def id_cn(string):
    index = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]
    map_end = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2']
    if len(string) != 18:
        return False
    ans = 0
    for i in range(17):
        ans += int(string[i]) * index[i]
    if map_end[ans % 11] != string[-1]:
        return False
    return 0, 0


def id_sg(string):
    index = [2, 7, 6, 5, 4, 3, 2]
    map_end = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'Z', 'J']
    if len(string) != 9:
        return False
    ans = 0
    for i in range(7):
        ans += int(string[i + 1]) * index[i]
    if map_end[ans % 11] != string[-1]:
        return False
    return 0, 0


def luna(string):
    card = ''
    for i in string:
        if i.isdigit():
            card += i
    length = len(card)
    cur = card[::-1]
    ans = 0
    for i in range(length):
        if i & 1 == 1:
            cur_ans = int(cur[i]) * 2
            ans += cur_ans - 9 if cur_ans > 9 else cur_ans
        else:
            ans += int(cur[i])
    return (0, 0) if ans % 10 == 0 else False


def mobile_cn(string):
    s = ''
    for i in string:
        if i.isdigit():
            s += i
    new_re = '((00)?86)?1([38][0-9]|[59][0-35-9]|7([01-35-8]|4(?=0[0-5]))|6[124-7]|4([4-9]|1(?=0)|4(?=[01])))\d{8}'
    ans = re.match(new_re, s)
    return (0, 0) if ans else False


def email(string):
    domain = ['biz', 'cc', 'cm', 'cn', 'cn.com', 'co', 'com', 'com.cn', 'com.hk', 'de', 'edu.cn', 'eu', 'gd', 'gov',
              'gov.cn', 'hk', 'in', 'info', 'jp', 'me', 'net', 'net.cn', 'org', 'org.cn', 'ru', 'tech', 'tv', 'tw',
              'us', 'vip', 'work']
    suffix = string.split('@')[1]
    tail = suffix.split('.')[-1]
    for eve in domain:
        if eve == tail:
            return 0, 0
    return False


# verify = {1: id_cn, 27: luna, 43: luna, 44: luna, 45: luna, 46: luna, 47: luna, 48: luna,
#           53: luna, 55: mobile_cn, 25: email}

rules = [
    {
        'id': 1,
        'regex': '^(?<!\\d)((1[1-5]|2[1-3]|3[1-7]|4[1-6]|5[0-4]|6[1-5]|[7-9]1)\\d{4}(18|19|20)\\d{2}((0[1-9])|(1['
                 '0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx])(?!\\d)$',
        'description': '身份证号码/社保卡号码/驾驶证号码',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [23, 62, 25, 26, 31, 225],
        'verify': id_cn
    },
    {
        'id': 2,
        'regex': '^(?<![\\da-zA-Z])(\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\-[1-4]\\d{6})(?![\\da-zA-Z])$',
        'description': '韩国身份证号',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [23, 62]
    },
    {
        'id': 3,
        'regex': '^ner_en_name$',
        'description': '英文姓名',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [13, 52]
    },
    {
        'id': 4,
        'regex': '^(?<!\\w)[FGSTsftg]\\d{7}[a-zA-Z](?!\\w)$',
        'description': '新加坡身份证号',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62],
        'verify': id_sg
    },
    {
        'id': 5,
        'regex': '^(?<!\\d)\\d{2}[01237]\\d{3}[01234567]\\d[01]\\d{7}(?!\\d)$',
        'description': '印度尼西亚身份证号',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 6,
        'regex': '^(?<!\\d)((\\d{4}\\-\\d{3,8})|(\\d{7,12}))(?!\\d)$',
        'description': '日本社会保险号(SSN),日本居民注册号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 7,
        'regex': '^(?<!\\w)[A-Z]{5}[0-9]{4}[A-Z]{1}(?!\\w)$',
        'description': '印度PAN卡号',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 8,
        'regex': '^(?<!\\d)(\\d{4}\\s\\d{4}\\s\\d{4}|\\d{4}-\\d{4}-\\d{4})(?!\\d)$',
        'description': '印度唯一身份号码(Aadhaar号)',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 9,
        'regex': '^(?<!\\d)((\\d[a-zA-Z]{7})|(\\d{2}[a-zA-Z]{6}))(?!\\d)$',
        'description': '摩洛哥身份证号',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 10,
        'regex': '^(?<!\\d)(\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{4}\\d[8,9]\\d)(?!\\d)$',
        'description': '南非身份证号',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [23, 62]
    },
    {
        'id': 11,
        'regex': '^(?<!\\d)((((\\+\\d{2}-)?0\\d{2,3}-\\d{7,8})|((\\+\\d{2}-)?(\\d{2,3}-)?([1][3,4,5,7,8][0-9][ '
                 '\\-]?\\d{4}[ \\-]?\\d{4}))))(?!\\d)$',
        'description': '电话号码',
        'is_combined_data': 0,
        'score': 0.5,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 12,
        'regex': '^(?<!\\d)(0?0(10|2[0-9]|3[134579]|4[1-35-8]|5[1-9]|6[369]|7[0-79]|8([1-3578]|9(?=[1-8]))|9['
                 '0134579])-?\\d{4}-?\\d{4})(?!\\d)$',
        'description': '座机电话',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 13,
        'regex': '^(?<!\\d)((\\+?(00)?1|\\(001\\)|（001）)[ \\-]?)?[2-9]\\d{2}[ \\-]?[2-9]\\d{2}[ \\-]?\\d{4}(?!\\d)$',
        'description': '美国电话号码',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 14,
        'regex': '^(?<!\\d)((\\+?(00)?81[ \\-]?0?|0)((1-?([157-9]\\d|[3-6]|3[3-9]|4[2-6]|6[2-7])|2-?[2-9]\\d|[346]-?\\d{2}|5-?([2-589]\\d|6[1-9]|7[2-8])|7-?([235-9]\\d|4[02-9])|8-?([2-46-8]\\d|5[2-9]|51(?=[24])))\\d{2}-?\\d{4}|[25-9]0\\d{4}[\\-]?\\d{4}))(?!\\d)$',
        'description': '日本电话号码',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 15,
        'regex': '^(?<!\\d)((\\+?(00)?91|0)[ \\-]?)?[789]\\d{9}(?!\\d)$',
        'description': '印度电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 16,
        'regex': '^(?<!\\d)((\\+?(00)?90|0)[ \\-]?)?5\\d{9}(?!\\d)$',
        'description': '土耳其电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 17,
        'regex': '^(?<!\\d)((\\+?(00)?213|0)[ \\-]?)?(5|6|7)\\d{8}(?!\\d)$',
        'description': '阿尔及利亚电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 18,
        'regex': '^(?<!\\d)((!?(\\+?(00)?966)|0)[ \\-]?)?5\\d{8}(?!\\d)$',
        'description': '沙特阿拉伯电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 19,
        'regex': '^(?<!\\d)(\\+?(00)?49[ \\-]?)[0]?\\d{10}(?!\\d)$',
        'description': '德国电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 20,
        'regex': '^(?<!\\d)((\\+?(00)?44|0)[ \\-]?)?7\\d{9}(?!\\d)$',
        'description': '英国电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 21,
        'regex': '^(?<!\\d)(\\+?(00)?852[ \\-]?)?[569]\\d{3}[ \\-]?\\d{4}(?!\\d)$',
        'description': '香港电话号码',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 22,
        'regex': '^(?<!\\d)((\\+?(00)?33|0)[ \\-]?)?[67]\\d{8}(?!\\d)$',
        'description': '法国电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 23,
        'regex': '^(?<!\\d)((\\+?(00)?972|0)[ \\-]?)?([23489]|5[0248]|77)[1-9]\\d{6}(?!\\d)$',
        'description': '以色列电话号码',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 24,
        'regex': '^(?<!\\d)((\\+?(00)?886|0)[ \\-]?)?9\\d{8}(?!\\d)$',
        'description': '台湾电话号码',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [20, 59, 22, 61]
    },
    {
        'id': 25,
        'regex': '^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,8})$',
        'description': '电子邮箱',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [21, 60, 22, 61],
        'verify': email
    },
    {
        'id': 26,
        'regex': '^(?<![\\da-zA-Z])((1[45]\\d{7})|([SsGgEeKkTtDdPpHhMm]\\d{8})|(([PpSs]|[DdSsPp][Ee]|[EeHh]['
                 '0-9a-hj-np-zA-HJ-NP-Z]|[Kk][Jj]|[Mm][AaBb])\\d{7}))(?![\\da-zA-Z])$',
        'description': '护照号码',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [24, 63]
    },
    {
        'id': 27,
        'regex': '^(?<!\\d)(62\\d{14,17}|62\\d{2}( \\d{4}){3}|62\\d{2}(-\\d{4}){3})(?!\\d)$',
        'description': '中国银行账号',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [73, 214],
        'verify': luna
    },
    {
        'id': 28,
        'regex': '^(?<!\\d)(([024][0-7]|1[0-35-6]|3[0-6]|[56][1-7]|[78][1-5])\\d{4}|901001|99907[7-9])(?!\\d)$',
        'description': '大陆邮编',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [0]
    },
    {
        'id': 29,
        'regex': '^(?<!\\d)[0-9]{5}(?:-[0-9]{4})?(?!\\d)$',
        'description': 'us zipcode',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [0]
    },
    {
        'id': 30,
        'regex': '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$',
        'description': '车牌号码',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [30]
    },
    {
        'id': 31,
        'regex': '((http[s]?|ftp|file)://)?(([0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)+)|(((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){'
                 '3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(:\\d{1,5})?))(/[0-9a-zA-Z_\\-%\\.]+)*/?(\\?[0-9a-zA-Z_]*=['
                 '0-9a-zA-Z_]*(&0-9a-zA-Z_]*=[0-9a-zA-Z_]*)*)?',
        'description': 'url',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [264, 249]
    },
    {
        'id': 32,
        'regex': '^(?<![\\da-zA-Z])[a-zA-Z]{3}\\d{12}(?![\\da-zA-Z])$',
        'description': '外国人居留许可证',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [113]
    },
    {
        'id': 33,
        'regex': '^(?<!\\d)(((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?))(?!\\d)$',
        'description': 'IPv4地址',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [35]
    },
    {
        'id': 34,
        'regex': '^(?<![\\da-zA-Z])((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|fe80:(:|(:[0-9a-fA-F]{1,4}){0,'
                 '4})%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,'
                 '3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,'
                 '1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|[0-9a-fA-F]{1,'
                 '4}:((:[0-9a-fA-F]{1,4}){1,6})|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|([0-9a-fA-F]{1,'
                 '4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,'
                 '4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,'
                 '7}:)|:((:[0-9a-fA-F]{1,4}){1,7}|:))(?![\\da-zA-Z])$',
        'description': 'IPv6地址',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [35]
    },
    {
        'id': 35,
        'regex': '^(赵|钱|孙|李|周|吴|郑|王|冯|陈|褚|卫|蒋|沈|韩|杨|朱|秦|尤|许|何|吕|施|张|孔|曹|严|华|金|魏|陶|姜|戚|谢|邹|喻|柏|窦|章|云|苏|潘|葛|奚|范|彭|郎|鲁|韦|昌|马|苗|凤|花|方(?!位|向|法|式)|俞|任|袁|柳|酆|鲍|史|唐|费|廉|岑|薛|雷|贺|倪|汤|滕|殷| 罗|毕|郝|邬|安|常|乐|(?<!在|高|低)于(?!是)|(?<!有|这|那|小)时(?!候|间|序|空)|傅|皮(?!肤|囊|下|纸|衣)|卞|齐|康|伍|余|元|卜|顾|孟|平|黄|穆|萧|尹|姚|邵|湛|汪|祁|毛|禹|狄|米|贝|明|臧|计|伏|成|戴| 宋|茅|庞|熊|纪|舒|屈|项|祝|董|梁|杜|阮|蓝|闵|席|季|麻|强|贾|路(?!边)|娄|危|江|童|颜|郭|梅|盛|林|刁|锺|徐|邱|骆|高|夏|蔡|田|樊|胡|凌|霍|虞|万|支|柯|昝|管|卢|莫|房|裘|缪|干|解|应|宗|丁|宣|贲|邓|郁|单|杭|洪|包|诸|左(?!右|面|边|下|上)|石|崔|吉|钮|龚|程|嵇| 邢|滑|裴|陆|荣|翁|荀|羊|於|惠|甄|麴|封|芮|羿|储|靳|汲|邴|糜|松|井|段|富|巫|乌|焦|巴|弓|牧|隗|山(?!上|下|中|羊|顶|底)|谷|车|侯|宓|蓬|(?<!成|完|保)全(?!部|都|家)|郗|班|仰(?!望|视)|秋|仲|伊|宫|宁|仇|栾|暴|甘|钭|历|戎|祖|武(?!功)|符|刘|景|詹|束|龙|叶|幸|司|韶|郜|黎|溥|白|怀|蒲|邰|从|鄂|索|咸|籍|卓|蔺|屠|蒙|池|乔|阳|郁|胥|能|苍|双|闻|莘|党|翟|谭|贡(?!献)|劳|逄|姬|申|扶|堵|冉|宰|郦|雍|却|桑| 桂|濮|牛|寿|通|边|扈|燕|冀|浦|尚|农|温|别|庄|晏|柴|瞿|充|慕|连|茹|习|宦|艾|容|向|古(?!代|时)|易|慎|戈|廖|庾|终(?!于)|暨|居|衡|耿|(?<!充|填|装)满|弘(?!扬)|匡|国|文|寇|广|禄|阙|东|欧|沃|利|蔚|越(?!来|好|高|大|低|小)|夔|隆|师(?!父|傅)|巩|厍|聂|晁|勾|敖|融|冷|訾|辛|阚|那|简|饶|空|曾|毋|沙|乜|养|鞠|须|丰|巢|关|蒯|相(?!见|互|遇|忘)|荆|游|竺|权|司马|上官|欧阳|夏侯|诸葛|闻人|东方|赫连|皇甫|尉迟|公羊|澹台|公冶宗政|濮阳|淳于|单于|太叔|申屠|公孙|仲孙|轩辕|令狐|钟离|宇文|长孙|慕容|司徒|司空|召|舜|岳|黄辰|寸|贰|皇|侨|彤|竭|端|赫|实|甫|集|象|翠|狂|辟|典|良|函|芒|苦|其|京|夕|乌孙|完颜|富察|费莫|蹇|称|诺|繁|戊|朴|毓|鉏|税|荤|靖|绪|愈|硕|牢|买|巧|枚|撒|泰|秘|亥|绍|(?<!可)以|壬|森|斋|释|奕|姒|朋|求|羽|用|占|真|穰|翦|闾|漆|贵|代|贯|旁|崇|栋|告|休|褒|谏|锐|皋|闳|在|歧|禾|示|委|钊|频|嬴|呼|威|昂|律|冒|保|系|抄|定|化|莱|校|抗|祢|綦|悟|宏|功|庚|务|敏|捷|拱|兆|丑|丙|畅|苟|随|类|卯|俟|友|答|乙|允|甲|留|尾|佼|玄|乘|裔|延| 植|环|矫|赛|昔|侍|度|旷|遇|偶|前|由|咎|塞|敛|受|泷|袭|衅|叔|圣|御|夫|仆|镇|藩|邸|府|掌|首|员(?!外)|焉|戏|可(?!以|能|见|惜|爱)| 智|尔|凭|悉|进|笃|厚|仁|业|肇|资|合|仍|衷|哀|刑|俎|仵|圭|夷|徭|蛮|(?<!流|淌|大)汗|孛|乾|帖|罕|洛|淦|洋|邶|郸|郯|邗|邛|剑|虢|隋|蒿|茆|菅|苌|桐|锁|钟|机|盘|铎|斛|玉|线|针|箕|庹|绳(?!子)|磨|蒉|瓮|弭|刀|疏|牵|浑|恽|势|世|仝|戢|睢|冼|种|涂|肖|泣|潜|卷|脱|谬|蹉|赧|浮|顿|说|次|错|念|夙|斯|完|丹|表|聊|源|姓|吾|寻|展|户|闭|才|无(?!法|限|边|能)|书|(?<!好|勤|上|大|小|中)学(?!习|会|懂)|愚|本|性|烟|寒(?!冷|风)|(?<!多)少|桥|板|斐|独孤|千|诗|嘉|扬|善|揭|祈|析|赤|紫|青|柔|刚|奇|拜|佛|陀|弥|阿|素|长(?!短|的)|僧|隐|仙|隽|宇|祭|酒|淡|塔|琦|闪|始|星|南|天|接|波|碧|速|禚|腾|潮|镜|似|澄|潭|謇|纵|渠|奈|(?<!微|冷|凉|秋|北|东|西|南|清)风|春|濯|沐|茂|英|兰|檀|藤|枝|检|生|折|登|驹|骑|貊|虎|肥|鹿|雀|野|飞|节|宜|鲜|粟|栗|豆|帛|官|布|衣|藏|宝|钞|银|门|盈|庆| 喜(?!欢)|及|普|营|希|载|漫|犁|力|贸|勤|革|改|兴|亓|睦|修|信|闽|北|守|坚|勇|汉|练|尉|士|旅|五(?!个)|(?<!命|军|口)令|将(?!军)|旗|军|行(?!为|动|军|不行)|奉|敬|恭|仪|堂|丘|义|礼|慈|孝|理|伦|卿|问|永|辉|尧|依|犹|(?<!中|转|媒)介(?!绍)|承|市|所|苑|杞|剧|第|零|谌|招|续|达|忻|鄞|战|迟|候|宛|励|粘|萨|邝|覃|辜|初|楼|城|区|局|台|妫|纳|泉|老|清|德|卑|过|麦|曲|竹|百|福|言|第五|佟| 爱|(?<!今|明|过|每)年|笪|谯|墨|连|南宫|赏|伯|佴|佘|牟|商|西门|东门|左丘|梁丘|琴|况|亢|缑|帅|微生|羊舌|海|归|呼延|南门|东郭| 百里|钦|鄢|汝|法|闫|楚|晋|谷梁|宰父|夹谷|拓跋|壤驷|乐正|漆雕|公西|巫马|端木|颛孙|子车|督|仉|司寇|亓官|三小|鲜于|锺离|盖|逯|库|郏|逢|阴|薄|厉|稽|闾丘|公良|段干|开|光|操|瑞|眭|泥|运|摩|伟|铁|迮|和)(?!的)[\\u4e00-\\u9fa5]{1,2}$',
        'description': '中国人姓名(汉字)',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [13, 52],
        'nlp_func': get_name
    },
    {
        'id': 36,
        'regex': '^ner$',
        'description': '中文地址',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [19, 58, 22, 297],
        'nlp_func': get_place
    },
    {
        'id': 37,
        'regex': ' \\d+\\s[A-z]+\\s[A-z]+\\s (?:Avenue|Lane|Road|Boulevard|Drive|Street|Ave|Dr|Rd|Blvd|Ln|St)\\.?',
        'description': '英文地址',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 38,
        'regex': '^(男|女|([Mm]ale)|([Ff]emale))$',
        'description': '性别',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [16, 55]
    },
    {
        'id': 39,
        'regex': '^((小学)|(初中)|(高中)|(大学专科)|(大学本科)|(研究生)|(博士(研究生)?)|(硕士(研究生)?)|(本科)|(专科)|(中专)|(职高)|(大专))$',
        'description': '学历(中文)',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [37]
    },
    {
        'id': 40,
        'regex': '^[Gg]raduate|[Uu]ndergraduate|[Pp]ostgraduate|[Pp]hd|[Dd]octor$',
        'description': '学历(英文)',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [37]
    },
    {
        'id': 41,
        'regex': '^(?<![\\da-zA-Z])[a-zA-Z0-9]{32}(?![\\da-zA-Z])$',
        'description': 'session_id',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [230]
    },
    {
        'id': 42,
        'regex': '^([A-Z]|[a-z]|[0-9]|[-=[;,./~!@#$%^*()_+}{:?]){6,20}$',
        'description': '密码',
        'is_combined_data': 1,
        'score': 0.3,
        '202_id': [68, 29]
    },
    {
        'id': 43,
        'regex': '(?<![\\da-zA-Z])(5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)((\\s\\d{4}){'
                 '3}|(\\-\\d{4}){3}|\\d{12})(?![\\da-zA-Z])',
        'description': 'Master信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153],
        'verify': luna
    },
    {
        'id': 44,
        'regex': '^(?<![\\da-zA-Z])(4\\d{12}(\\d{3})?|4\\d{3}((-\\d{4}){3}|( \\d{4}){3}))(?![\\da-zA-Z])$',
        'description': 'Visa信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153],
        'verify': luna
    },
    {
        'id': 45,
        'regex': '^(?<![\\da-zA-Z])(3[47]\\d{13}|3[47]\\d{2}\\-\\d{6}\\-\\d{5}|3[47]\\d{2} \\d{6} \\d{5})(?!['
                 '\\da-zA-Z])$',
        'description': '运通信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153],
        'verify': luna
    },
    {
        'id': 46,
        'regex': '^(?<![\\da-zA-Z])(3(0[0-5][0-9]{11}|095[0-9]{10}|6[0-9]{12}|[89][0-9]{12}))(?![\\da-zA-Z])$',
        'description': '大来国际信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': '153',
        'verify': luna
    },
    {
        'id': 47,
        'regex': '^(?<![\\da-zA-Z])(65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8]['
                 '0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10}))(?![\\da-zA-Z])$',
        'description': 'Discover信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153],
        'verify': luna
    },
    {
        'id': 48,
        'regex': '^(?<![\\da-zA-Z])(?:2131|1800|35\\d{3})\\d{11}(?![\\da-zA-Z])$',
        'description': 'JCB信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153],
        'verify': luna
    },
    {
        'id': 49,
        'regex': '^(?<![\\da-zA-Z])((508[5-9][0-9]{12})|(6069[8-9][0-9]{11})|(607[0-8][0-9]{12})|(6079[0-8][0-9]{'
                 '11})|(608[0-5][0-9]{12})|(6521[5-9][0-9]{11})|(652[2-9][0-9]{12})|(6530[0-9]{12})|(6531[0-4][0-9]{'
                 '11}))(?![\\da-zA-Z])$',
        'description': 'Rupay信用卡',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [153]
    },
    {
        'id': 50,
        'regex': '^(?<![0-9a-zA-Z])((1[0-5])|[1-9])?\\d(?![0-9a-zA-Z])$',
        'description': '年龄',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [15, 54]
    },
    {
        'id': 51,
        'regex': '^ner_place_en$',
        'description': '英文地名',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 52,
        'regex': '^(?<![\\da-zA-Z])8986\\d{16}(?!\\d)(?![\\da-zA-Z])$',
        'description': 'ICCID',
        'is_combined_data': 1,
        'score': 0.3,
        '202_id': [138]
    },
    {
        'id': 53,
        'regex': '^(?<![\\da-zA-Z])\\d{15}(?![\\da-zA-Z])$',
        'description': 'IMEI号',
        'is_combined_data': 1,
        'score': 0.3,
        '202_id': [86],
        'verify': luna
    },
    {
        'id': 54,
        'regex': '^(?<![\\da-zA-Z])460\\d{7}(?![\\da-zA-Z])$',
        'description': '中国MSIN号',
        'is_combined_data': 1,
        'score': 0.3,
        '202_id': [87]
    },
    {
        'id': 55,
        'regex': '^(?<![\\d])(\\+?(00)?86[ \\-]?)?[1][3-9][0-9]([ \\-]?\\d{8}|-\\d{4}-\\d{4}| \\d{4} \\d{4})(?![\\d])$',
        'description': '中国手机号码',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [20, 59, 22, 61],
        'verify': mobile_cn
    },
    {
        'id': 56,
        'regex': '(?<![\\da-zA-Z])[a-zA-Z0-9]{64}(\\s[a-zA-Z0-9]{32}){4,6}(?![\\da-zA-Z])',
        'description': 'session_key_in_bytedance',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [56]
    },
    {
        'id': 57,
        'regex': '^ST-[0-9]{10}-[a-zA-Z0-9]{32}\\,[a-z0-9]{32}$',
        'description': 'service_ticket_in_bytedance',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [56]
    },
    {
        'id': 58,
        'regex': '^(?<![\\da-zA-Z])![0-9a-zA-Z]{40}(?![\\da-zA-Z])$',
        'description': '编码后的口令',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [68, 29]
    },
    {
        'id': 59,
        'regex': '^[a-zA-Z0-9+/]{64}$',
        'description': 'api_key_in_bytedance',
        'is_combined_data': 0,
        'score': 0.4,
        '202_id': [56]
    },
    {
        'id': 60,
        'regex': '^AAAAB3NzaC1yc2EA[0-9a-zA-Z+/]{200,}={0,2}$',
        'description': 'ssh-pubkey(auth_key)',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [56]
    },
    {
        'id': 61,
        'regex': '^-{4,}BEGIN\\s[A-Z]{3,}\\sPRIVATE\\sKEY-{4,}[0-9a-zA-Z\\n\\r+/]{200,}={0,2}\\s?-{4,}END\\s[A-Z]{3,'
                 '}\\sPRIVATE\\sKEY-{4,}$',
        'description': 'ssh-seckey',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [56]
    },
    {
        'id': 62,
        'regex': '"^([0-9a-zA-Z_\\-]{1,}:[ ]?(""[!-+\\--:<-~]+""|[0-9]+)(\\s[0-9a-zA-Z_\\-]{1,}:[ ]?(""['
                 '!-+\\--:<-~]+""|[0-9]+))*)|([cC]ookie:[ ]?[0-9a-zA-Z_\\-%]+[ ]?=[ ]?[!-+\\--:<-~]*(;\\s?['
                 '0-9a-zA-Z_\\-%]+[ ]?=[ ]?[!-+\\--:<-~]*)*)$"',
        'description': 'cookie',
        'is_combined_data': 0,
        'score': 0.3,
        '202_id': [234]
    },
    {
        'id': 63,
        'regex': '^(session:[ ]?|session[ ]?=[ ]?)?X[0-9A-Z]{6}-[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-h]{12}-['
                 'a-zA-Z0-9]{5}$',
        'description': 'session',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [230]
    },
    {
        'id': 64,
        'regex': '^[0-9a-zA-Z+/=]{200,}={0,2}([\\n\\r]{1,2}[0-9a-zA-Z+/=]{200,}={0,2})+$',
        'description': 'session_data',
        'is_combined_data': 1,
        'score': 0.3,
        '202_id': [230]
    },
    {
        'id': 65,
        'regex': '^(?<!\\d)((1[0-9]{3}|20(\\d{2}))-(1[12]|0?[1-9])(-([12][0-9]|3[01]|0?[1-9]))?|(1[0-9]{3}|20(\\d{'
                 '2}))/(1[12]|0?[1-9])(/([12][0-9]|3[01]|0?[1-9]))?|(1[0-9]{3}|20(\\d{2}))\\.(1[12]|0?[1-9])(\\.(['
                 '12][0-9]|3[01]|0?[1-9]))|([12][0-9]|3[01]|0?[1-9])/(1[12]|0?[1-9])/(1[0-9]{3}|20(\\d{2})))(?!\\d)$',
        'description': '日期',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [14, 53]
    },
    {
        'id': 66,
        'regex': '^(.{2,3}省)?(.{2}市)?(.{2,3}(区|县))$',
        'description': '一级地址',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 67,
        'regex': '^(.{2,3}省)?(.{2}市)?(.{2,3}(区|县))?((.{2,3}(镇|乡))|(.{2,3}(路|街)))$',
        'description': '二级地址',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 68,
        'regex': '^(.{2,3}省)?(.{2}市)?(.{2,3}(区|县))?((.{2,3}(镇|乡))|(.{2,3}(路|街)))?(.{2,6}(小区|村|屯))$',
        'description': '三级地址',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 69,
        'regex': '^(.{2,3}省)?(.{2}市)?(.{2,3}(区|县))?((.{2,3}(镇|乡))|(.{2,3}(路|街)))?(.{2,6}(小区|村|屯))?(.{1,3}(号楼|组))$',
        'description': '四级地址',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 70,
        'regex': '^(.{2,3}省)?(.{2}市)?(.{2,3}(区|县))?((.{2,3}(镇|乡))|(.{2,3}(路|街)))?(.{2,6}(小区|村|屯))?(.{1,3}(号楼|组))(((.{'
                 '1,3}单元).{1,5}室)|(.{1,3}(号|户)))$',
        'description': '五级地址',
        'is_combined_data': 1,
        'score': 0.6,
        '202_id': [19, 58, 22, 297]
    },
    {
        'id': 71,
        'regex': '^[0-9a-fA-F]{2}((:[0-9a-fA-F]{2}){5}|(-[0-9a-fA-F]{2}){5})$',
        'description': 'MAC地址',
        'is_combined_data': 0,
        'score': 0.6,
        '202_id': [0]
    }
]
